AWSTemplateFormatVersion: '2010-09-09'
Description: Create Security Groups and VPC Endpoints for Private EKS Access

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where EKS is deployed

  PrivateSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of private subnet IDs for VPC Endpoints

  AdminCidr:
    Type: String
    Description: CIDR range for bastion SSH/admin access

Resources:
  BastionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Bastion host access
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref AdminCidr

  NodeSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Node access
      VpcId: !Ref VpcId

  ControlPlaneSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Control Plane access
      VpcId: !Ref VpcId

  CodeBuildSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CodeBuild access to EKS endpoints
      VpcId: !Ref VpcId

  EcrApiEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.api
      VpcEndpointType: Interface
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref CodeBuildSG

  EcrDkrEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.dkr
      VpcEndpointType: Interface
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref CodeBuildSG

  EksEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.eks
      VpcEndpointType: Interface
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref NodeSG

  StsEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.sts
      VpcEndpointType: Interface
      SubnetIds: !Ref PrivateSubnetIds
      SecurityGroupIds:
        - !Ref NodeSG

  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Select [0, !Split [",", !ImportValue MyPrivateRouteTables]]

Outputs:
  BastionSGId:
    Value: !Ref BastionSG
  NodeSGId:
    Value: !Ref NodeSG
  ControlPlaneSGId:
    Value: !Ref ControlPlaneSG
  CodeBuildSGId:
    Value: !Ref CodeBuildSG
